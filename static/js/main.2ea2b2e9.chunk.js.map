{"version":3,"sources":["components/textbox.js","components/rectangle.js","components/canvas.js","App.js","serviceWorker.js","index.js"],"names":["fabric","window","Textbox","canvas","text","margin","textbox","top","left","fontSize","padding","textAlign","add","setActiveObject","enterEditing","setSelectionStart","length","setSelectionEnd","Rectangle","height","width","fill","circle","Rect","Canvas","context","props","useState","setCanvas","snap","useEffect","backgroundColor","children","React","Children","map","child","cloneElement","findNewPos","distX","distY","target","obj","Math","abs","setLeft","getLeft","getWidth","setTop","getTop","getHeight","on","options","setCoords","forEachObject","isContainedWithinObject","intersectsWithObject","outerAreaLeft","outerAreaTop","outerAreaRight","outerAreaBottom","intersectLeft","intersectTop","intersectWidth","intersectHeight","intersectSize","targetLeft","targetRight","targetTop","targetBottom","objectLeft","objectRight","objectTop","objectBottom","id","ref","c","onClick","e","preventDefault","console","log","toJSON","event","loadFromJSON","lockMovementY","lockMovementX","lockScalingX","hasControls","lockRotation","hasRotatingPoint","editable","listObjects","push","group","Group","App","className","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2ea2b2e9.chunk.js","sourcesContent":["const fabric = window.fabric;\n\nconst Textbox = ({canvas, text = 'click to enter text', margin = 10}) => {\n  let textbox = new fabric.Textbox(text, {\n    top: margin,\n    left: margin,\n    fontSize: 14,\n    padding: margin,\n    textAlign: 'left',\n  });\n  canvas.add(textbox);\n  canvas.setActiveObject(textbox);\n  textbox.enterEditing();\n  textbox.setSelectionStart(textbox.text.length);\n  textbox.setSelectionEnd(textbox.text.length);\n};\n\nexport default Textbox;\n","const fabric = window.fabric;\n\nconst Rectangle = ({canvas, top = 0, left= 0, height = 100, width = 100, fill= 'red'}) => {\n    const circle = new fabric.Rect({\n      top,\n      left,\n      height,\n      width,\n      fill,\n    });\n    canvas.add(circle);\n};\n\nexport default Rectangle\n","import React, { Fragment } from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Textbox from \"./textbox\";\nimport Rectangle from \"./rectangle\";\n\nconst fabric = window.fabric;\n\nconst Canvas = ({width = 600, height = 400, margin = 10, ...props}) => {\n  let [canvas, setCanvas] = useState(null);\n  let context;\n  let snap = margin; // number of pixels before it snaps to closest objects\n\n  useEffect(() => {\n    setCanvas(new fabric.Canvas(context, {backgroundColor: 'white'}));\n  }, [context]);\n\n  const children = React.Children.map(props.children, child => {\n    return React.cloneElement(child, {\n      canvas: canvas\n    })\n  });\n\n  const makeGroup = event => {\n    event.preventDefault();\n    let listObjects = [];\n    canvas.forEachObject(obj => {\n      listObjects.push(obj);\n    });\n\n    if (listObjects) {\n      let group = new fabric.Group(listObjects);\n      canvas.add(group);\n    }\n  };\n\n  const load = event => {\n    event.preventDefault();\n    canvas.loadFromJSON('{\\n' +\n      '  \"objects\": [\\n' +\n      '    {\\n' +\n      '      \"type\": \"rect\",\\n' +\n      '      \"originX\": \"left\",\\n' +\n      '      \"originY\": \"top\",\\n' +\n      '      \"left\": 636,\\n' +\n      '      \"top\": 300,\\n' +\n      '      \"width\": 100,\\n' +\n      '      \"height\": 100,\\n' +\n      '      \"fill\": \"rgba(72,253,162, 0.75)\",\\n' +\n      '      \"stroke\": null,\\n' +\n      '      \"strokeWidth\": 1,\\n' +\n      '      \"strokeDashArray\": null,\\n' +\n      '      \"strokeLineCap\": \"butt\",\\n' +\n      '      \"strokeLineJoin\": \"miter\",\\n' +\n      '      \"strokeMiterLimit\": 10,\\n' +\n      '      \"scaleX\": 1,\\n' +\n      '      \"scaleY\": 1,\\n' +\n      '      \"angle\": 0,\\n' +\n      '      \"flipX\": false,\\n' +\n      '      \"flipY\": false,\\n' +\n      '      \"opacity\": 1,\\n' +\n      '      \"shadow\": null,\\n' +\n      '      \"visible\": true,\\n' +\n      '      \"clipTo\": null,\\n' +\n      '      \"backgroundColor\": \"\",\\n' +\n      '      \"fillRule\": \"nonzero\",\\n' +\n      '      \"globalCompositeOperation\": \"source-over\",\\n' +\n      '      \"transformMatrix\": null,\\n' +\n      '      \"rx\": 0,\\n' +\n      '      \"ry\": 0\\n' +\n      '    },\\n' +\n      '    {\\n' +\n      '      \"type\": \"rect\",\\n' +\n      '      \"originX\": \"left\",\\n' +\n      '      \"originY\": \"top\",\\n' +\n      '      \"left\": 341,\\n' +\n      '      \"top\": 57,\\n' +\n      '      \"width\": 100,\\n' +\n      '      \"height\": 100,\\n' +\n      '      \"fill\": \"rgba(187,109,207, 0.75)\",\\n' +\n      '      \"stroke\": null,\\n' +\n      '      \"strokeWidth\": 1,\\n' +\n      '      \"strokeDashArray\": null,\\n' +\n      '      \"strokeLineCap\": \"butt\",\\n' +\n      '      \"strokeLineJoin\": \"miter\",\\n' +\n      '      \"strokeMiterLimit\": 10,\\n' +\n      '      \"scaleX\": 1,\\n' +\n      '      \"scaleY\": 1,\\n' +\n      '      \"angle\": 0,\\n' +\n      '      \"flipX\": false,\\n' +\n      '      \"flipY\": false,\\n' +\n      '      \"opacity\": 1,\\n' +\n      '      \"shadow\": null,\\n' +\n      '      \"visible\": true,\\n' +\n      '      \"clipTo\": null,\\n' +\n      '      \"backgroundColor\": \"\",\\n' +\n      '      \"fillRule\": \"nonzero\",\\n' +\n      '      \"globalCompositeOperation\": \"source-over\",\\n' +\n      '      \"transformMatrix\": null,\\n' +\n      '      \"rx\": 0,\\n' +\n      '      \"ry\": 0\\n' +\n      '    },\\n' +\n      '    {\\n' +\n      '      \"type\": \"rect\",\\n' +\n      '      \"originX\": \"left\",\\n' +\n      '      \"originY\": \"top\",\\n' +\n      '      \"left\": 51,\\n' +\n      '      \"top\": 279,\\n' +\n      '      \"width\": 100,\\n' +\n      '      \"height\": 100,\\n' +\n      '      \"fill\": \"rgba(72,71,38, 0.75)\",\\n' +\n      '      \"stroke\": null,\\n' +\n      '      \"strokeWidth\": 1,\\n' +\n      '      \"strokeDashArray\": null,\\n' +\n      '      \"strokeLineCap\": \"butt\",\\n' +\n      '      \"strokeLineJoin\": \"miter\",\\n' +\n      '      \"strokeMiterLimit\": 10,\\n' +\n      '      \"scaleX\": 1,\\n' +\n      '      \"scaleY\": 1,\\n' +\n      '      \"angle\": 0,\\n' +\n      '      \"flipX\": false,\\n' +\n      '      \"flipY\": false,\\n' +\n      '      \"opacity\": 1,\\n' +\n      '      \"shadow\": null,\\n' +\n      '      \"visible\": true,\\n' +\n      '      \"clipTo\": null,\\n' +\n      '      \"backgroundColor\": \"\",\\n' +\n      '      \"fillRule\": \"nonzero\",\\n' +\n      '      \"globalCompositeOperation\": \"source-over\",\\n' +\n      '      \"transformMatrix\": null,\\n' +\n      '      \"rx\": 0,\\n' +\n      '      \"ry\": 0\\n' +\n      '    },\\n' +\n      '    {\\n' +\n      '      \"type\": \"rect\",\\n' +\n      '      \"originX\": \"left\",\\n' +\n      '      \"originY\": \"top\",\\n' +\n      '      \"left\": 353,\\n' +\n      '      \"top\": 541,\\n' +\n      '      \"width\": 100,\\n' +\n      '      \"height\": 100,\\n' +\n      '      \"fill\": \"rgba(116,252,218, 0.75)\",\\n' +\n      '      \"stroke\": null,\\n' +\n      '      \"strokeWidth\": 1,\\n' +\n      '      \"strokeDashArray\": null,\\n' +\n      '      \"strokeLineCap\": \"butt\",\\n' +\n      '      \"strokeLineJoin\": \"miter\",\\n' +\n      '      \"strokeMiterLimit\": 10,\\n' +\n      '      \"scaleX\": 1,\\n' +\n      '      \"scaleY\": 1,\\n' +\n      '      \"angle\": 0,\\n' +\n      '      \"flipX\": false,\\n' +\n      '      \"flipY\": false,\\n' +\n      '      \"opacity\": 1,\\n' +\n      '      \"shadow\": null,\\n' +\n      '      \"visible\": true,\\n' +\n      '      \"clipTo\": null,\\n' +\n      '      \"backgroundColor\": \"\",\\n' +\n      '      \"fillRule\": \"nonzero\",\\n' +\n      '      \"globalCompositeOperation\": \"source-over\",\\n' +\n      '      \"transformMatrix\": null,\\n' +\n      '      \"rx\": 0,\\n' +\n      '      \"ry\": 0\\n' +\n      '    }\\n' +\n      '  ],\\n' +\n      '  \"background\": \"white\"\\n' +\n      '}');\n\n    // locks items so they cant be moved or text changed.\n    canvas.forEachObject(obj => {\n      obj.lockMovementY = true;\n      obj.lockMovementX = true;\n      obj.lockScalingX = true;\n      obj.hasControls = false;\n      obj.lockRotation = true;\n      obj.hasRotatingPoint = false;\n      obj.editable = false;\n    });\n  };\n\n  const findNewPos = (distX, distY, target, obj) => {\n    // See whether to focus on X or Y axis\n    if (Math.abs(distX) > Math.abs(distY)) {\n      if (distX > 0) {\n        target.setLeft(obj.getLeft() - target.getWidth() - margin);\n\n        // pushed out left side of canvas\n        if (target.getLeft() < snap) {\n          target.setLeft(obj.getLeft() + target.getWidth() - (margin * 2));\n        }\n      } else {\n        target.setLeft(obj.getLeft() + target.getWidth() + margin);\n\n        // pushed out right side of canvas\n        if ((target.getWidth() + target.getLeft()) > (width - snap)) {\n          target.setLeft(obj.getLeft() - target.getWidth() + margin);\n        }\n      }\n    } else {\n      if (distY > 0) {\n        target.setTop(obj.getTop() - target.getHeight() - margin);\n\n        // pushed out top of canvas\n        if (target.getTop() < snap) {\n          target.setTop( obj.getTop() + target.getHeight() - (margin * 2));\n        }\n      } else {\n        target.setTop(obj.getTop() + obj.getHeight() + margin);\n\n        // pushed out bottom of canvas\n        if ((target.getHeight() + target.getTop()) > (height - snap)) {\n          target.setTop(obj.getTop() - target.getHeight() + margin);\n        }\n      }\n    }\n  };\n\n  if (canvas) {\n    canvas.on('object:moving', (options) => {\n      // Sets corner position coordinates based on current angle, width and height\n      options.target.setCoords();\n\n      // Don't allow objects off the canvas\n      // canvas left\n      if (options.target.getLeft() < snap) {\n        options.target.setLeft(margin);\n      }\n\n      // canvas top\n      if (options.target.getTop() < snap) {\n        options.target.setTop(margin);\n      }\n\n      // canvas right\n      if ((options.target.getWidth() + options.target.getLeft()) > (width - snap)) {\n        options.target.setLeft(width - options.target.getWidth() - margin);\n      }\n\n      // canvas bottom\n      if ((options.target.getHeight() + options.target.getTop()) > (height - snap)) {\n        options.target.setTop(height - options.target.getHeight() - margin);\n      }\n\n      // Loop through objects\n      canvas.forEachObject(function (obj) {\n        if (obj === options.target) return;\n\n        // If objects intersect\n        if (options.target.isContainedWithinObject(obj) || options.target.intersectsWithObject(obj) || obj.isContainedWithinObject(options.target)) {\n\n          var distX = ((obj.getLeft() + obj.getWidth()) / 2) - ((options.target.getLeft() + options.target.getWidth()) / 2);\n          var distY = ((obj.getTop() + obj.getHeight()) / 2) - ((options.target.getTop() + options.target.getHeight()) / 2);\n\n          // Set new position\n          findNewPos(distX, distY, options.target, obj);\n        }\n\n        /** target = moving element, object = static element */\n        // Snap objects to each other horizontally\n        // If bottom points are on same Y axis\n        if (Math.abs((options.target.getTop() + options.target.getHeight()) - (obj.getTop() + obj.getHeight())) < snap) {\n\n          // Snap target BL to object BR\n          if (Math.abs(options.target.getLeft() - (obj.getLeft() + obj.getWidth())) < snap) {\n            options.target.setLeft(obj.getLeft() + obj.getWidth());\n            options.target.setTop(obj.getTop() + obj.getHeight() - options.target.getHeight());\n          }\n\n          // Snap target BR to object BL\n          if (Math.abs((options.target.getLeft() + options.target.getWidth()) - obj.getLeft()) < snap) {\n            options.target.setLeft(obj.getLeft() - options.target.getWidth());\n            options.target.setTop(obj.getTop() + obj.getHeight() - options.target.getHeight());\n          }\n        }\n\n        // If top points are on same Y axis\n        if (Math.abs(options.target.getTop() - obj.getTop()) < snap) {\n\n          // Snap target TL to object TR\n          if (Math.abs(options.target.getLeft() - (obj.getLeft() + obj.getWidth())) < snap) {\n            options.target.setLeft(obj.getLeft() + obj.getWidth());\n            options.target.setTop(obj.getTop());\n          }\n\n          // Snap target TR to object TL\n          if (Math.abs((options.target.getLeft() + options.target.getWidth()) - obj.getLeft()) < snap) {\n            options.target.setLeft(obj.getLeft() - options.target.getWidth());\n            options.target.setTop(obj.getTop());\n          }\n        }\n\n        // Snap objects to each other vertically\n        // If right points are on same X axis\n        if (Math.abs((options.target.getLeft() + options.target.getWidth()) - (obj.getLeft() + obj.getWidth())) < snap) {\n\n          // Snap target TR to object BR\n          if (Math.abs(options.target.getTop() - (obj.getTop() + obj.getHeight())) < snap) {\n            options.target.setLeft(obj.getLeft() + obj.getWidth() - options.target.getWidth());\n            options.target.setTop(obj.getTop() + obj.getHeight());\n          }\n\n          // Snap target BR to object TR\n          if (Math.abs((options.target.getTop() + options.target.getHeight()) - obj.getTop()) < snap) {\n            options.target.setLeft(obj.getLeft() + obj.getWidth() - options.target.getWidth());\n            options.target.setTop(obj.getTop() - options.target.getHeight());\n          }\n        }\n\n        // If left points are on same X axis\n        if (Math.abs(options.target.getLeft() - obj.getLeft()) < snap) {\n\n          // Snap target TL to object BL\n          if (Math.abs(options.target.getTop() - (obj.getTop() + obj.getHeight())) < snap) {\n            options.target.setLeft(obj.getLeft());\n            options.target.setTop(obj.getTop() + obj.getHeight() + margin);\n          }\n\n          // Snap target BL to object TL\n          if (Math.abs((options.target.getTop() + options.target.getHeight()) - obj.getTop()) < snap) {\n            options.target.setLeft(obj.getLeft());\n            options.target.setTop(obj.getTop() - options.target.getHeight());\n          }\n        }\n      });\n\n      options.target.setCoords();\n\n      // If objects still overlap\n      var outerAreaLeft = null,\n        outerAreaTop = null,\n        outerAreaRight = null,\n        outerAreaBottom = null;\n\n      canvas.forEachObject(function (obj) {\n        if (obj === options.target) return;\n\n        if (options.target.isContainedWithinObject(obj) || options.target.intersectsWithObject(obj) || obj.isContainedWithinObject(options.target)) {\n\n          var intersectLeft = null,\n            intersectTop = null,\n            intersectWidth = null,\n            intersectHeight = null,\n            intersectSize = null,\n            targetLeft = options.target.getLeft(),\n            targetRight = targetLeft + options.target.getWidth(),\n            targetTop = options.target.getTop(),\n            targetBottom = targetTop + options.target.getHeight(),\n            objectLeft = obj.getLeft(),\n            objectRight = objectLeft + obj.getWidth(),\n            objectTop = obj.getTop(),\n            objectBottom = objectTop + obj.getHeight();\n\n          // Find intersect information for X axis\n          if (targetLeft >= objectLeft && targetLeft <= objectRight) {\n            intersectLeft = targetLeft;\n            intersectWidth = obj.getWidth() - (intersectLeft - objectLeft);\n\n          } else if (objectLeft >= targetLeft && objectLeft <= targetRight) {\n            intersectLeft = objectLeft;\n            intersectWidth = options.target.getWidth() - (intersectLeft - targetLeft);\n          }\n\n          // Find intersect information for Y axis\n          if (targetTop >= objectTop && targetTop <= objectBottom) {\n            intersectTop = targetTop;\n            intersectHeight = obj.getHeight() - (intersectTop - objectTop);\n\n          } else if (objectTop >= targetTop && objectTop <= targetBottom) {\n            intersectTop = objectTop;\n            intersectHeight = options.target.getHeight() - (intersectTop - targetTop);\n          }\n\n          // Find intersect size (this will be 0 if objects are touching but not overlapping)\n          if (intersectWidth > 0 && intersectHeight > 0) {\n            intersectSize = intersectWidth * intersectHeight;\n          }\n\n          // Set outer snapping area\n          if (obj.getLeft() < outerAreaLeft || outerAreaLeft == null) {\n            outerAreaLeft = obj.getLeft();\n          }\n\n          if (obj.getTop() < outerAreaTop || outerAreaTop == null) {\n            outerAreaTop = obj.getTop();\n          }\n\n          if ((obj.getLeft() + obj.getWidth()) > outerAreaRight || outerAreaRight == null) {\n            outerAreaRight = obj.getLeft() + obj.getWidth();\n          }\n\n          if ((obj.getTop() + obj.getHeight()) > outerAreaBottom || outerAreaBottom == null) {\n            outerAreaBottom = obj.getTop() + obj.getHeight();\n          }\n\n          // If objects are intersecting, reposition outside all shapes which touch\n          if (intersectSize) {\n            var distX = (outerAreaRight / 2) - ((options.target.getLeft() + options.target.getWidth()) / 2);\n            var distY = (outerAreaBottom / 2) - ((options.target.getTop() + options.target.getHeight()) / 2);\n\n            // Set new position\n            findNewPos(distX, distY, options.target, obj);\n          }\n        }\n      });\n    });\n  }\n\n  return (\n    <Fragment>\n      <canvas id='canvas' ref={ c => (context = c) } width={ width } height={ height }/>\n      { canvas && children }\n      <button onClick={ e => {\n        e.preventDefault();\n        console.log(canvas.toJSON())\n      } }>To JSON\n      </button>\n      <button onClick={ load }>Load</button>\n      <button onClick={ makeGroup }>Group all</button>\n      <button onClick={ e => {\n        e.preventDefault();\n        Textbox({canvas, margin});\n      } }>Add new Textbox\n      </button>\n      <button onClick={ e => {\n        e.preventDefault();\n        Rectangle({canvas});\n      } }>Add new Rect\n      </button>\n    </Fragment>\n  )\n};\n\nexport default Canvas;\n","import React from 'react';\nimport './App.css';\nimport 'fabric-webpack';\nimport Canvas from \"./components/canvas\";\n\nconst App = () => {\n\n  return (\n    <div className=\"App\">\n      <Canvas height={680} width={800}/>\n    </div>\n  )\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}